---
parasoftVersion: 2024.2.0
productVersion: 10.7.1
schemaVersion: 1
suite:
  $type: TestSuite
  hasEnvironmentConfig: true
  enabled: true
  name: Test Suite
  rootTestSuite: true
  lastModifiedBy: rmartinez
  match: /PolicyCenter.do
  autoGeneratedName: true
  profileMappingID: 0
  maxProfileMappingID: 1
  nextIdentifier: 3
  tests:
  - $type: ToolTest
    testLogic: true
    testID: 1
    enabled: true
    name: POST
    tool:
      $type: ResourceTemplate
      usesAutomaticallyGeneratedName: true
      iconName: ResourceTemplate
      name: Resource Template
      outputTools:
      - $type: MethodTool
        iconName: Method
        name: Extension Tool
        outputProvider:
          outputTools:
          - $type: HTMLCleanup
            iconName: HTMLCleanup
            name: HTML Cleanup
            verbose: false
            messageOutputs:
              $type: ErrorViewOutputProvider
              outputTools:
              - $type: DiffTool
                iconName: Diff
                name: Diff
                differs:
                - $type: TextDiffer
                  regexMode: true
                source:
                  controls:
                  - keys:
                    - ""
                    - ""
                    row:
                      refs:
                      - dataSourceName: ""
                      last: false
                  - "[\\s\\S]*"
                mode: 1
              name: Messages
            docType: 1
            sourceOutputs:
              $type: MIMESpecificNamedToolOutputProvider
              outputTools:
              - $type: XMLtoDataSource
                dataSourceNames:
                - GlobalDataSheet
                allowToolbar: false
                iconName: XMLDataBank
                name: XML Data Bank
                xmlMessage: true
              name: Transformed Source
              type: application/xhtml+xml
        method:
          hasCode: true
          code:
            $type: ScriptCode
            input:
              useText: true
              textInput:
                $type: ScriptingTextInput
                text: "import groovy.json.JsonSlurper\r\nimport groovy.xml.MarkupBuilder\r\
                  \nimport groovy.xml.XmlUtil\r\nimport com.parasoft.api.*\r\nimport\
                  \ groovy.xml.XmlSlurper\r\n \r\npublic String exampleScript(Object\
                  \ input, ExtensionToolContext context) {\r\n    // Convert input\
                  \ to String\r\n    def jsonInput = input.toString()\r\n \r\n   \
                  \ // Create an instance of JsonSlurper to check for valid JSON\r\
                  \n    def jsonSlurper = new JsonSlurper()\r\n \r\n    // Try parsing\
                  \ the input as JSON\r\n    def data\r\n    try {\r\n        data\
                  \ = jsonSlurper.parseText(jsonInput)\r\n    } catch (Exception e)\
                  \ {\r\n        // If parsing fails, it's not valid JSON\r\n    \
                  \    String errorMessage = \"Invalid input: Expected JSON but received:\
                  \ \" + jsonInput\r\n        Application.showMessage(errorMessage)\r\
                  \n        // Optionally redirect or handle non-JSON input\r\n  \
                  \      // For this example, we'll just return null. Adjust as necessary.\r\
                  \n        return \"<Message>Invalid input</Message>\";\r\n    }\r\
                  \n \r\n    // Generate XML only if the input is valid JSON\r\n \
                  \   def xmlBuilder = new StringBuilder()\r\n    xmlBuilder.append(\"\
                  <root>\\n\")\r\n    data.targets.each { target ->\r\n        def\
                  \ tagName = target.id.replace('-', '_') // Replace hyphens with\
                  \ underscores for valid XML tags\r\n        // Fix self-closing\
                  \ tags and unquoted attributes in the content\r\n        def sanitizedContent\
                  \ = target.content.replaceAll(\"(<input [^>]*?)\\\\b(checked)(\\\
                  \\s*?/?>)\", '$1checked=\"checked\"$3')\r\n        xmlBuilder.append(\"\
                  \ <${tagName}>${sanitizedContent}</${tagName}>\\n\")\r\n    }\r\n\
                  \    xmlBuilder.append(\"</root>\")\r\n \r\n    // Show the updated\
                  \ XML\r\n    String finalXml = xmlBuilder.toString()\r\n    Application.showMessage(finalXml)\r\
                  \n    return finalXml\r\n}"
          hasMethodId: true
          methodId:
            $type: ScriptMethodIdentifier
            functionName: exampleScript
            arguments:
            - java.lang.Object
            - com.parasoft.api.ExtensionToolContext
      method: POST
      outputProviders:
        $type: MessagingSmartOutputProvider
        requestHeader:
          $type: HTTPNamedToolOutputProvider
          menuName: Transport Header
          name: Request Transport Header
        responseHeader:
          $type: HTTPNamedToolOutputProvider
          menuName: Transport Header
          name: Response Transport Header
        xmlRequestOutput:
          $type: NamedXMLToolOutputProvider
          menuName: Traffic
          name: Request Traffic
        trafficOutput:
          m_name: Traffic Stream
        objectOutput:
          $type: ObjectOutputProvider
          name: Traffic Object
        setupOutput:
          $type: HTTPNamedToolOutputProvider
          menuName: Beginning
          name: Suite Beginning
      match: ""
